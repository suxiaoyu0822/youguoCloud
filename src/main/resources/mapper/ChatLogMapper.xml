<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yogo.dao.ChatLogMapper">
  <resultMap id="BaseResultMap" type="com.yogo.entity.ChatLog">
    <result column="chat_log_id" jdbcType="INTEGER" property="chatLogId" />
    <result column="conversation_id" jdbcType="INTEGER" property="conversationId" />
    <result column="sender_id" jdbcType="INTEGER" property="senderId" />
    <result column="receiver_id" jdbcType="INTEGER" property="receiverId" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="BIGINT" property="time" />
    <result column="from_client" jdbcType="INTEGER" property="fromClient" />
  </resultMap>
  <select id="selectClientSayByConversationId" resultMap="BaseResultMap">
    select * from chat_log where conversation_id=#{conversationId} and from_client=1;
  </select>
  <select id="selectByConversationId" resultMap="BaseResultMap">
    select * from chat_log where conversation_id=#{conversationId};
  </select>
  <select id="selectByClientId" resultMap="BaseResultMap">
    select * from chat_log where receiver_id=#{clientId} OR sender_id=#{clientId};
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    chat_log_id, conversation_id, sender_id, receiver_id, content_type, content, time, 
    from_client
  </sql>
  <select id="selectByExample" parameterType="com.yogo.entity.ChatLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from chat_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yogo.entity.ChatLogExample">
    delete from chat_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yogo.entity.ChatLog">
    insert into chat_log (chat_log_id, conversation_id, sender_id, 
      receiver_id, content_type, content, 
      time, from_client)
    values (#{chatLogId,jdbcType=INTEGER}, #{conversationId,jdbcType=INTEGER}, #{senderId,jdbcType=INTEGER}, 
      #{receiverId,jdbcType=INTEGER}, #{contentType,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, 
      #{time,jdbcType=BIGINT}, #{fromClient,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yogo.entity.ChatLog">
    insert into chat_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chatLogId != null">
        chat_log_id,
      </if>
      <if test="conversationId != null">
        conversation_id,
      </if>
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="receiverId != null">
        receiver_id,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="fromClient != null">
        from_client,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chatLogId != null">
        #{chatLogId,jdbcType=INTEGER},
      </if>
      <if test="conversationId != null">
        #{conversationId,jdbcType=INTEGER},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
      <if test="fromClient != null">
        #{fromClient,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yogo.entity.ChatLogExample" resultType="java.lang.Long">
    select count(*) from chat_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update chat_log
    <set>
      <if test="record.chatLogId != null">
        chat_log_id = #{record.chatLogId,jdbcType=INTEGER},
      </if>
      <if test="record.conversationId != null">
        conversation_id = #{record.conversationId,jdbcType=INTEGER},
      </if>
      <if test="record.senderId != null">
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverId != null">
        receiver_id = #{record.receiverId,jdbcType=INTEGER},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
      <if test="record.fromClient != null">
        from_client = #{record.fromClient,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update chat_log
    set chat_log_id = #{record.chatLogId,jdbcType=INTEGER},
      conversation_id = #{record.conversationId,jdbcType=INTEGER},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      receiver_id = #{record.receiverId,jdbcType=INTEGER},
      content_type = #{record.contentType,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT},
      from_client = #{record.fromClient,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectClientAndServerChatLog" resultType="com.yogo.entity.ChatLogAndSendRecInfo">
  SELECT
	a.*,
IF (
	a.sender_id = 30,
	b.`name` ,
	c.`name`
)AS senderName,

IF (
	a.sender_id = 30,
	b.`name` ,
	c.`name`
)AS receiverName
FROM
	chat_log a,
	client b,
	customer_service c
WHERE
	if(
		from_client = 1,
		a.sender_id = b.client_id,
		a.sender_id = c.service_id
	)
AND if(
	from_client = 0,
	a.receiver_id = b.client_id,
	a.receiver_id = c.service_id
)
AND((a.sender_id = #{clientId} AND a.receiver_id = #{serviceId}) OR (a.sender_id= #{serviceId} AND a.receiver_id = #{clientId}))
ORDER BY  a.time DESC
  </select>
  <select id="selectClientChatLog" resultType="com.yogo.entity.ChatLogAndSendRecInfo">
   SELECT
	a.*,
IF (
	a.sender_id = 30,
	b.`name` ,
	c.`name`
)AS senderName,

IF (
	a.sender_id = 30,
	b.`name` ,
	c.`name`
)AS receiverName
FROM
	chat_log a,
	client b,
	customer_service c
WHERE
	if(
		from_client = 1,
		a.sender_id = b.client_id,
		a.sender_id = c.service_id
	)
AND if(
	from_client = 0,
	a.receiver_id = b.client_id,
	a.receiver_id = c.service_id
)
AND(a.sender_id = #{clientId} OR a.receiver_id = #{clientId})ORDER BY  a.time DESC
  </select>
</mapper>