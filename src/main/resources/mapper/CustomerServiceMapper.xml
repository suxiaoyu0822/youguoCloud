<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yogo.dao.CustomerServiceMapper">
  <resultMap id="BaseResultMap" type="com.yogo.entity.CustomerService">
    <result column="service_id" jdbcType="INTEGER" property="serviceId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="nickname" jdbcType="VARCHAR" property="nickname" />
    <result column="employee_id" jdbcType="VARCHAR" property="employeeId" />
    <result column="auto_message" jdbcType="VARCHAR" property="autoMessage" />
    <result column="is_dimission" javaType="INTEGER" property="isDimission"/>
    <result column="password" javaType="String" property="password"/>
  </resultMap>
  <select id="selectAll" resultMap="BaseResultMap">
    select * from customer_service;
  </select>
  <select id="selectByEIdAndPwd" resultMap="BaseResultMap">
    select * from customer_service where employee_id=#{employeeId} and password=#{password};
  </select>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    service_id, name, group_id, nickname, employee_id, auto_message
  </sql>
  <select id="selectByExample" parameterType="com.yogo.entity.CustomerServiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from customer_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yogo.entity.CustomerServiceExample">
    delete from customer_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yogo.entity.CustomerService">
    insert into customer_service (service_id, name, group_id, 
      nickname, employee_id, auto_message
      )
    values (#{serviceId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
      #{nickname,jdbcType=VARCHAR}, #{employeeId,jdbcType=VARCHAR}, #{autoMessage,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yogo.entity.CustomerService">
    insert into customer_service
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="serviceId != null">
        service_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="nickname != null">
        nickname,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="autoMessage != null">
        auto_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="serviceId != null">
        #{serviceId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=INTEGER},
      </if>
      <if test="nickname != null">
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="autoMessage != null">
        #{autoMessage,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yogo.entity.CustomerServiceExample" resultType="java.lang.Long">
    select count(*) from customer_service
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update customer_service
    <set>
      <if test="record.serviceId != null">
        service_id = #{record.serviceId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=INTEGER},
      </if>
      <if test="record.nickname != null">
        nickname = #{record.nickname,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=VARCHAR},
      </if>
      <if test="record.autoMessage != null">
        auto_message = #{record.autoMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.isDimission != null">
        auto_message = #{record.isDimission,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  
  <update id="updateByExample" parameterType="map">
    update customer_service
    set service_id = #{record.serviceId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=INTEGER},
      nickname = #{record.nickname,jdbcType=VARCHAR},
      employee_id = #{record.employeeId,jdbcType=VARCHAR},
      auto_message = #{record.autoMessage,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <delete id="deleteCustomerService" parameterType="java.lang.Integer">
    delete from customer_service where service_id = #{serviceId}
  </delete>
  
  <!--Create By Cjn-->
  <select id="selectAllServerNum" resultType="int">
    SELECT COUNT(*) FROM customer_service;
  </select>
  <select id="selectNotDimissionPerson" resultType="com.yogo.entity.CustomerService">
    SELECT * FROM customer_service WHERE is_dimission = 0;
  </select>
  <select id="selectBySearchName" parameterType="String" resultType="com.yogo.entity.CustomerService">
    SELECT * FROM customer_service WHERE name LIKE CONCAT('%',#{name},'%' ) OR nickname LIKE CONCAT('%',#{name},'%' );
  </select>
  <update id="updateDimission" parameterType="Integer">
    UPDATE customer_service SET is_dimission = 1 WHERE service_id = #{service_id};
  </update>
  <select id="selectAllCustom" resultType="com.yogo.entity.CustomerService">
    SELECT * FROM customer_service;
  </select>
</mapper>