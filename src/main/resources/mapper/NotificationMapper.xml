<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yogo.dao.NotificationMapper">
  <resultMap id="BaseResultMap" type="com.yogo.entity.Notification">
    <result column="notification_id" jdbcType="INTEGER" property="notificationId" />
    <result column="nt_id" jdbcType="INTEGER" property="ntId" />
    <result column="not_id" jdbcType="INTEGER" property="notId" />
    <result column="object_id" jdbcType="INTEGER" property="objectId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="BIGINT" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    notification_id, nt_id, not_id, object_id, content, time
  </sql>
  <select id="selectByExample" parameterType="com.yogo.entity.NotificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.yogo.entity.NotificationExample">
    delete from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yogo.entity.Notification">
    insert into notification (notification_id, nt_id, not_id, 
      object_id, content, time
      )
    values (#{notificationId,jdbcType=INTEGER}, #{ntId,jdbcType=INTEGER}, #{notId,jdbcType=INTEGER}, 
      #{objectId,jdbcType=INTEGER}, #{content,jdbcType=VARCHAR}, #{time,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yogo.entity.Notification">
    insert into notification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="notificationId != null">
        notification_id,
      </if>
      <if test="ntId != null">
        nt_id,
      </if>
      <if test="notId != null">
        not_id,
      </if>
      <if test="objectId != null">
        object_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="notificationId != null">
        #{notificationId,jdbcType=INTEGER},
      </if>
      <if test="ntId != null">
        #{ntId,jdbcType=INTEGER},
      </if>
      <if test="notId != null">
        #{notId,jdbcType=INTEGER},
      </if>
      <if test="objectId != null">
        #{objectId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yogo.entity.NotificationExample" resultType="java.lang.Long">
    select count(*) from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notification
    <set>
      <if test="record.notificationId != null">
        notification_id = #{record.notificationId,jdbcType=INTEGER},
      </if>
      <if test="record.ntId != null">
        nt_id = #{record.ntId,jdbcType=INTEGER},
      </if>
      <if test="record.notId != null">
        not_id = #{record.notId,jdbcType=INTEGER},
      </if>
      <if test="record.objectId != null">
        object_id = #{record.objectId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notification
    set notification_id = #{record.notificationId,jdbcType=INTEGER},
      nt_id = #{record.ntId,jdbcType=INTEGER},
      not_id = #{record.notId,jdbcType=INTEGER},
      object_id = #{record.objectId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>